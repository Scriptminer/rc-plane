class Jetcon:
  def __init__(self):
    self.x = 0
    self.y = 0

  def display(self):
    print("Status: X:%+6.3f, Y:%+6.3f" % (self.x, self.y))
    ChatConnection.send_all_json({'type': 'pos', 'x': self.x, 'y': self.y })

  def tick(self):
    changed = False
    pygame.event.pump
    for event in pygame.event.get():

      if event.type == pygame.QUIT:
        print("Bye!")
        ChatConnection.send_all_msg("Server quitting")
        ioloop = tornado.ioloop.IOLoop.instance()
        ioloop.add_callback(ioloop.stop)

      else:
        joystick = pygame.joystick.Joystick(0)
        joystick.init()
    
        # Get Number of Axes
        numaxes = str(joystick.get_numaxes())
        # Get Axis Data
        axisData = []
        for i in range(int(numaxes)):
          axis = round(joystick.get_axis(i)*100)/100
          axisData.append(axis)
        self.x = axisData[0]
        self.y = axisData[1]
        changed = True
